<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="collegeConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="collegeConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Common.Properties.Settings.GlobalReference.Default.collegeConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupsTableAdapter" GeneratorDataComponentClassName="GroupsTableAdapter" Name="Groups" UserDataComponentName="GroupsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="collegeConnectionString (Settings)" DbObjectName="college.dbo.Groups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Groups] WHERE (([group_id] = @Original_group_id) AND ([group_name] = @Original_group_name) AND ([group_type_id] = @Original_group_type_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_group_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="group_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_group_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="group_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Groups] ([group_name], [group_type_id]) VALUES (@group_name, @group_type_id);
SELECT group_id, group_name, group_type_id FROM Groups WHERE (group_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@group_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="group_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@group_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="group_type_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT group_id, group_name, group_type_id FROM dbo.Groups</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Groups] SET [group_name] = @group_name, [group_type_id] = @group_type_id WHERE (([group_id] = @Original_group_id) AND ([group_name] = @Original_group_name) AND ([group_type_id] = @Original_group_type_id));
SELECT group_id, group_name, group_type_id FROM Groups WHERE (group_id = @group_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@group_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="group_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@group_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="group_type_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_group_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="group_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_group_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="group_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="group_id" ColumnName="group_id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@group_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="group_id" DataSetColumn="group_id" />
              <Mapping SourceColumn="group_name" DataSetColumn="group_name" />
              <Mapping SourceColumn="group_type_id" DataSetColumn="group_type_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SubjectTypesTableAdapter" GeneratorDataComponentClassName="SubjectTypesTableAdapter" Name="SubjectTypes" UserDataComponentName="SubjectTypesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="collegeConnectionString (Settings)" DbObjectName="college.dbo.SubjectTypes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SubjectTypes] WHERE (([subject_type_id] = @Original_subject_type_id) AND ([subject_type_name] = @Original_subject_type_name) AND ([subject_global_type] = @Original_subject_global_type))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_subject_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="subject_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_subject_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subject_type_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_subject_global_type" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="subject_global_type" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SubjectTypes] ([subject_type_name], [subject_global_type]) VALUES (@subject_type_name, @subject_global_type);
SELECT subject_type_id, subject_type_name, subject_global_type FROM SubjectTypes WHERE (subject_type_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@subject_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subject_type_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@subject_global_type" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="subject_global_type" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT subject_type_id, subject_type_name, subject_global_type FROM dbo.SubjectTypes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SubjectTypes] SET [subject_type_name] = @subject_type_name, [subject_global_type] = @subject_global_type WHERE (([subject_type_id] = @Original_subject_type_id) AND ([subject_type_name] = @Original_subject_type_name) AND ([subject_global_type] = @Original_subject_global_type));
SELECT subject_type_id, subject_type_name, subject_global_type FROM SubjectTypes WHERE (subject_type_id = @subject_type_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@subject_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subject_type_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@subject_global_type" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="subject_global_type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_subject_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="subject_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_subject_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subject_type_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_subject_global_type" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="subject_global_type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="subject_type_id" ColumnName="subject_type_id" DataSourceName="" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@subject_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="subject_type_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="subject_type_id" DataSetColumn="subject_type_id" />
              <Mapping SourceColumn="subject_type_name" DataSetColumn="subject_type_name" />
              <Mapping SourceColumn="subject_global_type" DataSetColumn="subject_global_type" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupTypesTableAdapter" GeneratorDataComponentClassName="GroupTypesTableAdapter" Name="GroupTypes" UserDataComponentName="GroupTypesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="collegeConnectionString (Settings)" DbObjectName="college.dbo.GroupTypes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[GroupTypes] WHERE (([group_type_id] = @Original_group_type_id) AND ([group_type_name] = @Original_group_type_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_group_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="group_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_group_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="group_type_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[GroupTypes] ([group_type_name]) VALUES (@group_type_name);
SELECT group_type_id, group_type_name FROM GroupTypes WHERE (group_type_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@group_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="group_type_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT group_type_id, group_type_name FROM dbo.GroupTypes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[GroupTypes] SET [group_type_name] = @group_type_name WHERE (([group_type_id] = @Original_group_type_id) AND ([group_type_name] = @Original_group_type_name));
SELECT group_type_id, group_type_name FROM GroupTypes WHERE (group_type_id = @group_type_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@group_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="group_type_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_group_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="group_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_group_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="group_type_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="group_type_id" ColumnName="group_type_id" DataSourceName="" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@group_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="group_type_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="group_type_id" DataSetColumn="group_type_id" />
              <Mapping SourceColumn="group_type_name" DataSetColumn="group_type_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarksTableAdapter" GeneratorDataComponentClassName="MarksTableAdapter" Name="Marks" UserDataComponentName="MarksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="collegeConnectionString (Settings)" DbObjectName="college.dbo.Marks" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Marks] WHERE (([student_id] = @Original_student_id) AND ([plan_record_id] = @Original_plan_record_id) AND ([semester_number] = @Original_semester_number) AND ([mark] = @Original_mark) AND ([mark_type_id] = @Original_mark_type_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plan_record_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plan_record_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_mark" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_mark_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="mark_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Marks] ([student_id], [plan_record_id], [semester_number], [mark], [mark_type_id]) VALUES (@student_id, @plan_record_id, @semester_number, @mark, @mark_type_id);
SELECT student_id, plan_record_id, semester_number, mark, mark_type_id FROM Marks WHERE (mark = @mark) AND (mark_type_id = @mark_type_id) AND (plan_record_id = @plan_record_id) AND (semester_number = @semester_number) AND (student_id = @student_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@plan_record_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plan_record_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@mark" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@mark_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="mark_type_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT student_id, plan_record_id, semester_number, mark, mark_type_id FROM dbo.Marks</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Marks] SET [student_id] = @student_id, [plan_record_id] = @plan_record_id, [semester_number] = @semester_number, [mark] = @mark, [mark_type_id] = @mark_type_id WHERE (([student_id] = @Original_student_id) AND ([plan_record_id] = @Original_plan_record_id) AND ([semester_number] = @Original_semester_number) AND ([mark] = @Original_mark) AND ([mark_type_id] = @Original_mark_type_id));
SELECT student_id, plan_record_id, semester_number, mark, mark_type_id FROM Marks WHERE (mark = @mark) AND (mark_type_id = @mark_type_id) AND (plan_record_id = @plan_record_id) AND (semester_number = @semester_number) AND (student_id = @student_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@plan_record_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plan_record_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@mark" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@mark_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="mark_type_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plan_record_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plan_record_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_mark" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_mark_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="mark_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="student_id" DataSetColumn="student_id" />
              <Mapping SourceColumn="plan_record_id" DataSetColumn="plan_record_id" />
              <Mapping SourceColumn="semester_number" DataSetColumn="semester_number" />
              <Mapping SourceColumn="mark" DataSetColumn="mark" />
              <Mapping SourceColumn="mark_type_id" DataSetColumn="mark_type_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarkTypesTableAdapter" GeneratorDataComponentClassName="MarkTypesTableAdapter" Name="MarkTypes" UserDataComponentName="MarkTypesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="collegeConnectionString (Settings)" DbObjectName="college.dbo.MarkTypes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MarkTypes] WHERE (([mark_type_id] = @Original_mark_type_id) AND ([mark_type_name] = @Original_mark_type_name) AND ([priority] = @Original_priority))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_mark_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="mark_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_mark_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="mark_type_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_priority" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="priority" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MarkTypes] ([mark_type_name], [priority]) VALUES (@mark_type_name, @priority);
SELECT mark_type_id, mark_type_name, priority FROM MarkTypes WHERE (mark_type_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@mark_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="mark_type_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@priority" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="priority" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT mark_type_id, mark_type_name, priority FROM dbo.MarkTypes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MarkTypes] SET [mark_type_name] = @mark_type_name, [priority] = @priority WHERE (([mark_type_id] = @Original_mark_type_id) AND ([mark_type_name] = @Original_mark_type_name) AND ([priority] = @Original_priority));
SELECT mark_type_id, mark_type_name, priority FROM MarkTypes WHERE (mark_type_id = @mark_type_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@mark_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="mark_type_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@priority" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="priority" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_mark_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="mark_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_mark_type_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="mark_type_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_priority" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="priority" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="mark_type_id" ColumnName="mark_type_id" DataSourceName="" DataTypeServer="smallint" DbType="Int16" Direction="Input" ParameterName="@mark_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="2" SourceColumn="mark_type_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="mark_type_id" DataSetColumn="mark_type_id" />
              <Mapping SourceColumn="mark_type_name" DataSetColumn="mark_type_name" />
              <Mapping SourceColumn="priority" DataSetColumn="priority" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlansTableAdapter" GeneratorDataComponentClassName="PlansTableAdapter" Name="Plans" UserDataComponentName="PlansTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="collegeConnectionString (Settings)" DbObjectName="college.dbo.Plans" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Plans] WHERE (([plan_record_id] = @Original_plan_record_id) AND ([group_id] = @Original_group_id) AND ([subject_id] = @Original_subject_id) AND ([subject_type_id] = @Original_subject_type_id) AND ([okr_count] = @Original_okr_count) AND ([ikr_count] = @Original_ikr_count))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plan_record_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plan_record_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_subject_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="subject_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_subject_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="subject_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_okr_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="okr_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_ikr_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="ikr_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Plans] ([group_id], [subject_id], [subject_type_id], [okr_count], [ikr_count]) VALUES (@group_id, @subject_id, @subject_type_id, @okr_count, @ikr_count);
SELECT plan_record_id, group_id, subject_id, subject_type_id, okr_count, ikr_count FROM Plans WHERE (plan_record_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@subject_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="subject_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@subject_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="subject_type_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@okr_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="okr_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@ikr_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="ikr_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT plan_record_id, group_id, subject_id, subject_type_id, okr_count, ikr_count FROM dbo.Plans</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Plans] SET [group_id] = @group_id, [subject_id] = @subject_id, [subject_type_id] = @subject_type_id, [okr_count] = @okr_count, [ikr_count] = @ikr_count WHERE (([plan_record_id] = @Original_plan_record_id) AND ([group_id] = @Original_group_id) AND ([subject_id] = @Original_subject_id) AND ([subject_type_id] = @Original_subject_type_id) AND ([okr_count] = @Original_okr_count) AND ([ikr_count] = @Original_ikr_count));
SELECT plan_record_id, group_id, subject_id, subject_type_id, okr_count, ikr_count FROM Plans WHERE (plan_record_id = @plan_record_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@subject_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="subject_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@subject_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="subject_type_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@okr_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="okr_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@ikr_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="ikr_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plan_record_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plan_record_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_subject_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="subject_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_subject_type_id" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="subject_type_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_okr_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="okr_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_ikr_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="ikr_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="plan_record_id" ColumnName="plan_record_id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@plan_record_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="plan_record_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="plan_record_id" DataSetColumn="plan_record_id" />
              <Mapping SourceColumn="group_id" DataSetColumn="group_id" />
              <Mapping SourceColumn="subject_id" DataSetColumn="subject_id" />
              <Mapping SourceColumn="subject_type_id" DataSetColumn="subject_type_id" />
              <Mapping SourceColumn="okr_count" DataSetColumn="okr_count" />
              <Mapping SourceColumn="ikr_count" DataSetColumn="ikr_count" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SemestersTableAdapter" GeneratorDataComponentClassName="SemestersTableAdapter" Name="Semesters" UserDataComponentName="SemestersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="collegeConnectionString (Settings)" DbObjectName="college.dbo.Semesters" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Semesters] WHERE (([plan_record_id] = @Original_plan_record_id) AND ([semester_number] = @Original_semester_number) AND ([hours_count] = @Original_hours_count) AND ([hours_per_week] = @Original_hours_per_week) AND ([lpz_hours_count] = @Original_lpz_hours_count) AND ([kp_hours_count] = @Original_kp_hours_count) AND ([exam] = @Original_exam))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plan_record_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plan_record_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="hours_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_hours_per_week" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="hours_per_week" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_lpz_hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="lpz_hours_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_kp_hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="kp_hours_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_exam" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="exam" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Semesters] ([plan_record_id], [semester_number], [hours_count], [hours_per_week], [lpz_hours_count], [kp_hours_count], [exam]) VALUES (@plan_record_id, @semester_number, @hours_count, @hours_per_week, @lpz_hours_count, @kp_hours_count, @exam);
SELECT plan_record_id, semester_number, hours_count, hours_per_week, lpz_hours_count, kp_hours_count, exam FROM Semesters WHERE (plan_record_id = @plan_record_id) AND (semester_number = @semester_number)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@plan_record_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plan_record_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="hours_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@hours_per_week" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="hours_per_week" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@lpz_hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="lpz_hours_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@kp_hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="kp_hours_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@exam" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="exam" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT plan_record_id, semester_number, hours_count, hours_per_week, lpz_hours_count, kp_hours_count, exam FROM dbo.Semesters</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Semesters] SET [plan_record_id] = @plan_record_id, [semester_number] = @semester_number, [hours_count] = @hours_count, [hours_per_week] = @hours_per_week, [lpz_hours_count] = @lpz_hours_count, [kp_hours_count] = @kp_hours_count, [exam] = @exam WHERE (([plan_record_id] = @Original_plan_record_id) AND ([semester_number] = @Original_semester_number) AND ([hours_count] = @Original_hours_count) AND ([hours_per_week] = @Original_hours_per_week) AND ([lpz_hours_count] = @Original_lpz_hours_count) AND ([kp_hours_count] = @Original_kp_hours_count) AND ([exam] = @Original_exam));
SELECT plan_record_id, semester_number, hours_count, hours_per_week, lpz_hours_count, kp_hours_count, exam FROM Semesters WHERE (plan_record_id = @plan_record_id) AND (semester_number = @semester_number)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@plan_record_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plan_record_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="hours_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@hours_per_week" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="hours_per_week" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@lpz_hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="lpz_hours_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@kp_hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="kp_hours_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@exam" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="exam" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_plan_record_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="plan_record_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="hours_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_hours_per_week" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="hours_per_week" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_lpz_hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="lpz_hours_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_kp_hours_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="kp_hours_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_exam" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="exam" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="plan_record_id" DataSetColumn="plan_record_id" />
              <Mapping SourceColumn="semester_number" DataSetColumn="semester_number" />
              <Mapping SourceColumn="hours_count" DataSetColumn="hours_count" />
              <Mapping SourceColumn="hours_per_week" DataSetColumn="hours_per_week" />
              <Mapping SourceColumn="lpz_hours_count" DataSetColumn="lpz_hours_count" />
              <Mapping SourceColumn="kp_hours_count" DataSetColumn="kp_hours_count" />
              <Mapping SourceColumn="exam" DataSetColumn="exam" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SemestersLengthTableAdapter" GeneratorDataComponentClassName="SemestersLengthTableAdapter" Name="SemestersLength" UserDataComponentName="SemestersLengthTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="collegeConnectionString (Settings)" DbObjectName="college.dbo.SemestersLength" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SemestersLength] WHERE (([group_id] = @Original_group_id) AND ([semester_number] = @Original_semester_number) AND ([length] = @Original_length) AND ([semester_length_id] = @Original_semester_length_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_length" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="length" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_semester_length_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="semester_length_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SemestersLength] ([group_id], [semester_number], [length]) VALUES (@group_id, @semester_number, @length);
SELECT group_id, semester_number, length, semester_length_id FROM SemestersLength WHERE (semester_length_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@length" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="length" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT group_id, semester_number, length, semester_length_id FROM dbo.SemestersLength</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SemestersLength] SET [group_id] = @group_id, [semester_number] = @semester_number, [length] = @length WHERE (([group_id] = @Original_group_id) AND ([semester_number] = @Original_semester_number) AND ([length] = @Original_length) AND ([semester_length_id] = @Original_semester_length_id));
SELECT group_id, semester_number, length, semester_length_id FROM SemestersLength WHERE (semester_length_id = @semester_length_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@length" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="length" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_length" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="length" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_semester_length_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="semester_length_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="semester_length_id" ColumnName="semester_length_id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@semester_length_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="semester_length_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="group_id" DataSetColumn="group_id" />
              <Mapping SourceColumn="semester_number" DataSetColumn="semester_number" />
              <Mapping SourceColumn="length" DataSetColumn="length" />
              <Mapping SourceColumn="semester_length_id" DataSetColumn="semester_length_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SkipsTableAdapter" GeneratorDataComponentClassName="SkipsTableAdapter" Name="Skips" UserDataComponentName="SkipsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="collegeConnectionString (Settings)" DbObjectName="college.dbo.Skips" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Skips] WHERE (([student_id] = @Original_student_id) AND ([semester_number] = @Original_semester_number) AND ((@IsNull_skip_count = 1 AND [skip_count] IS NULL) OR ([skip_count] = @Original_skip_count)) AND ((@IsNull_disrespectfully_skip_count = 1 AND [disrespectfully_skip_count] IS NULL) OR ([disrespectfully_skip_count] = @Original_disrespectfully_skip_count)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_skip_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skip_count" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_skip_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="skip_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_disrespectfully_skip_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disrespectfully_skip_count" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_disrespectfully_skip_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="disrespectfully_skip_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Skips] ([student_id], [semester_number], [skip_count], [disrespectfully_skip_count]) VALUES (@student_id, @semester_number, @skip_count, @disrespectfully_skip_count);
SELECT student_id, semester_number, skip_count, disrespectfully_skip_count FROM Skips WHERE (semester_number = @semester_number) AND (student_id = @student_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@skip_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="skip_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@disrespectfully_skip_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="disrespectfully_skip_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT student_id, semester_number, skip_count, disrespectfully_skip_count FROM dbo.Skips</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Skips] SET [student_id] = @student_id, [semester_number] = @semester_number, [skip_count] = @skip_count, [disrespectfully_skip_count] = @disrespectfully_skip_count WHERE (([student_id] = @Original_student_id) AND ([semester_number] = @Original_semester_number) AND ((@IsNull_skip_count = 1 AND [skip_count] IS NULL) OR ([skip_count] = @Original_skip_count)) AND ((@IsNull_disrespectfully_skip_count = 1 AND [disrespectfully_skip_count] IS NULL) OR ([disrespectfully_skip_count] = @Original_disrespectfully_skip_count)));
SELECT student_id, semester_number, skip_count, disrespectfully_skip_count FROM Skips WHERE (semester_number = @semester_number) AND (student_id = @student_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@skip_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="skip_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@disrespectfully_skip_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="disrespectfully_skip_count" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_semester_number" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="semester_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_skip_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="skip_count" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_skip_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="skip_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_disrespectfully_skip_count" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disrespectfully_skip_count" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_disrespectfully_skip_count" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="disrespectfully_skip_count" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="student_id" DataSetColumn="student_id" />
              <Mapping SourceColumn="semester_number" DataSetColumn="semester_number" />
              <Mapping SourceColumn="skip_count" DataSetColumn="skip_count" />
              <Mapping SourceColumn="disrespectfully_skip_count" DataSetColumn="disrespectfully_skip_count" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsTableAdapter" GeneratorDataComponentClassName="StudentsTableAdapter" Name="Students" UserDataComponentName="StudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="collegeConnectionString (Settings)" DbObjectName="college.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Students] WHERE (([student_id] = @Original_student_id) AND ([first_name] = @Original_first_name) AND ([second_name] = @Original_second_name) AND ([middle_name] = @Original_middle_name) AND ([group_id] = @Original_group_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_first_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="first_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_second_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="second_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_middle_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="middle_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Students] ([first_name], [second_name], [middle_name], [group_id]) VALUES (@first_name, @second_name, @middle_name, @group_id);
SELECT student_id, first_name, second_name, middle_name, group_id FROM Students WHERE (student_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@first_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="first_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@second_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="second_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@middle_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="middle_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT student_id, first_name, second_name, middle_name, group_id FROM dbo.Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Students] SET [first_name] = @first_name, [second_name] = @second_name, [middle_name] = @middle_name, [group_id] = @group_id WHERE (([student_id] = @Original_student_id) AND ([first_name] = @Original_first_name) AND ([second_name] = @Original_second_name) AND ([middle_name] = @Original_middle_name) AND ([group_id] = @Original_group_id));
SELECT student_id, first_name, second_name, middle_name, group_id FROM Students WHERE (student_id = @student_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@first_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="first_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@second_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="second_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@middle_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="middle_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_student_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_first_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="first_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_second_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="second_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_middle_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="middle_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_group_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="group_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="student_id" ColumnName="student_id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@student_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="student_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="student_id" DataSetColumn="student_id" />
              <Mapping SourceColumn="first_name" DataSetColumn="first_name" />
              <Mapping SourceColumn="second_name" DataSetColumn="second_name" />
              <Mapping SourceColumn="middle_name" DataSetColumn="middle_name" />
              <Mapping SourceColumn="group_id" DataSetColumn="group_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SubjectsTableAdapter" GeneratorDataComponentClassName="SubjectsTableAdapter" Name="Subjects" UserDataComponentName="SubjectsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="collegeConnectionString (Settings)" DbObjectName="college.dbo.Subjects" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Subjects] WHERE (([subject_id] = @Original_subject_id) AND ([subject_name] = @Original_subject_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_subject_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="subject_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_subject_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subject_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Subjects] ([subject_name]) VALUES (@subject_name);
SELECT subject_id, subject_name FROM Subjects WHERE (subject_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@subject_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subject_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT subject_id, subject_name FROM dbo.Subjects</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Subjects] SET [subject_name] = @subject_name WHERE (([subject_id] = @Original_subject_id) AND ([subject_name] = @Original_subject_name));
SELECT subject_id, subject_name FROM Subjects WHERE (subject_id = @subject_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@subject_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subject_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_subject_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="subject_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_subject_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="subject_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="subject_id" ColumnName="subject_id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@subject_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="subject_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="subject_id" DataSetColumn="subject_id" />
              <Mapping SourceColumn="subject_name" DataSetColumn="subject_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1" msprop:Generator_UserDSName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Groups" msprop:Generator_TableClassName="GroupsDataTable" msprop:Generator_TableVarName="tableGroups" msprop:Generator_TablePropName="Groups" msprop:Generator_RowDeletingName="GroupsRowDeleting" msprop:Generator_RowChangingName="GroupsRowChanging" msprop:Generator_RowEvHandlerName="GroupsRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupsRowDeleted" msprop:Generator_UserTableName="Groups" msprop:Generator_RowChangedName="GroupsRowChanged" msprop:Generator_RowEvArgName="GroupsRowChangeEvent" msprop:Generator_RowClassName="GroupsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="group_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columngroup_id" msprop:Generator_ColumnPropNameInRow="group_id" msprop:Generator_ColumnPropNameInTable="group_idColumn" msprop:Generator_UserColumnName="group_id" type="xs:int" />
              <xs:element name="group_name" msprop:Generator_ColumnVarNameInTable="columngroup_name" msprop:Generator_ColumnPropNameInRow="group_name" msprop:Generator_ColumnPropNameInTable="group_nameColumn" msprop:Generator_UserColumnName="group_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="group_type_id" msprop:Generator_ColumnVarNameInTable="columngroup_type_id" msprop:Generator_ColumnPropNameInRow="group_type_id" msprop:Generator_ColumnPropNameInTable="group_type_idColumn" msprop:Generator_UserColumnName="group_type_id" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SubjectTypes" msprop:Generator_TableClassName="SubjectTypesDataTable" msprop:Generator_TableVarName="tableSubjectTypes" msprop:Generator_TablePropName="SubjectTypes" msprop:Generator_RowDeletingName="SubjectTypesRowDeleting" msprop:Generator_RowChangingName="SubjectTypesRowChanging" msprop:Generator_RowEvHandlerName="SubjectTypesRowChangeEventHandler" msprop:Generator_RowDeletedName="SubjectTypesRowDeleted" msprop:Generator_UserTableName="SubjectTypes" msprop:Generator_RowChangedName="SubjectTypesRowChanged" msprop:Generator_RowEvArgName="SubjectTypesRowChangeEvent" msprop:Generator_RowClassName="SubjectTypesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="subject_type_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnsubject_type_id" msprop:Generator_ColumnPropNameInRow="subject_type_id" msprop:Generator_ColumnPropNameInTable="subject_type_idColumn" msprop:Generator_UserColumnName="subject_type_id" type="xs:short" />
              <xs:element name="subject_type_name" msprop:Generator_ColumnVarNameInTable="columnsubject_type_name" msprop:Generator_ColumnPropNameInRow="subject_type_name" msprop:Generator_ColumnPropNameInTable="subject_type_nameColumn" msprop:Generator_UserColumnName="subject_type_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="subject_global_type" msprop:Generator_ColumnVarNameInTable="columnsubject_global_type" msprop:Generator_ColumnPropNameInRow="subject_global_type" msprop:Generator_ColumnPropNameInTable="subject_global_typeColumn" msprop:Generator_UserColumnName="subject_global_type" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GroupTypes" msprop:Generator_TableClassName="GroupTypesDataTable" msprop:Generator_TableVarName="tableGroupTypes" msprop:Generator_TablePropName="GroupTypes" msprop:Generator_RowDeletingName="GroupTypesRowDeleting" msprop:Generator_RowChangingName="GroupTypesRowChanging" msprop:Generator_RowEvHandlerName="GroupTypesRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupTypesRowDeleted" msprop:Generator_UserTableName="GroupTypes" msprop:Generator_RowChangedName="GroupTypesRowChanged" msprop:Generator_RowEvArgName="GroupTypesRowChangeEvent" msprop:Generator_RowClassName="GroupTypesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="group_type_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columngroup_type_id" msprop:Generator_ColumnPropNameInRow="group_type_id" msprop:Generator_ColumnPropNameInTable="group_type_idColumn" msprop:Generator_UserColumnName="group_type_id" type="xs:short" />
              <xs:element name="group_type_name" msprop:Generator_ColumnVarNameInTable="columngroup_type_name" msprop:Generator_ColumnPropNameInRow="group_type_name" msprop:Generator_ColumnPropNameInTable="group_type_nameColumn" msprop:Generator_UserColumnName="group_type_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Marks" msprop:Generator_TableClassName="MarksDataTable" msprop:Generator_TableVarName="tableMarks" msprop:Generator_TablePropName="Marks" msprop:Generator_RowDeletingName="MarksRowDeleting" msprop:Generator_RowChangingName="MarksRowChanging" msprop:Generator_RowEvHandlerName="MarksRowChangeEventHandler" msprop:Generator_RowDeletedName="MarksRowDeleted" msprop:Generator_UserTableName="Marks" msprop:Generator_RowChangedName="MarksRowChanged" msprop:Generator_RowEvArgName="MarksRowChangeEvent" msprop:Generator_RowClassName="MarksRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="student_id" msprop:Generator_ColumnVarNameInTable="columnstudent_id" msprop:Generator_ColumnPropNameInRow="student_id" msprop:Generator_ColumnPropNameInTable="student_idColumn" msprop:Generator_UserColumnName="student_id" type="xs:int" />
              <xs:element name="plan_record_id" msprop:Generator_ColumnVarNameInTable="columnplan_record_id" msprop:Generator_ColumnPropNameInRow="plan_record_id" msprop:Generator_ColumnPropNameInTable="plan_record_idColumn" msprop:Generator_UserColumnName="plan_record_id" type="xs:int" />
              <xs:element name="semester_number" msprop:Generator_ColumnVarNameInTable="columnsemester_number" msprop:Generator_ColumnPropNameInRow="semester_number" msprop:Generator_ColumnPropNameInTable="semester_numberColumn" msprop:Generator_UserColumnName="semester_number" type="xs:short" />
              <xs:element name="mark" msprop:Generator_ColumnVarNameInTable="columnmark" msprop:Generator_ColumnPropNameInRow="mark" msprop:Generator_ColumnPropNameInTable="markColumn" msprop:Generator_UserColumnName="mark" type="xs:short" />
              <xs:element name="mark_type_id" msprop:Generator_ColumnVarNameInTable="columnmark_type_id" msprop:Generator_ColumnPropNameInRow="mark_type_id" msprop:Generator_ColumnPropNameInTable="mark_type_idColumn" msprop:Generator_UserColumnName="mark_type_id" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MarkTypes" msprop:Generator_TableClassName="MarkTypesDataTable" msprop:Generator_TableVarName="tableMarkTypes" msprop:Generator_TablePropName="MarkTypes" msprop:Generator_RowDeletingName="MarkTypesRowDeleting" msprop:Generator_RowChangingName="MarkTypesRowChanging" msprop:Generator_RowEvHandlerName="MarkTypesRowChangeEventHandler" msprop:Generator_RowDeletedName="MarkTypesRowDeleted" msprop:Generator_UserTableName="MarkTypes" msprop:Generator_RowChangedName="MarkTypesRowChanged" msprop:Generator_RowEvArgName="MarkTypesRowChangeEvent" msprop:Generator_RowClassName="MarkTypesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="mark_type_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnmark_type_id" msprop:Generator_ColumnPropNameInRow="mark_type_id" msprop:Generator_ColumnPropNameInTable="mark_type_idColumn" msprop:Generator_UserColumnName="mark_type_id" type="xs:short" />
              <xs:element name="mark_type_name" msprop:Generator_ColumnVarNameInTable="columnmark_type_name" msprop:Generator_ColumnPropNameInRow="mark_type_name" msprop:Generator_ColumnPropNameInTable="mark_type_nameColumn" msprop:Generator_UserColumnName="mark_type_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="priority" msprop:Generator_ColumnVarNameInTable="columnpriority" msprop:Generator_ColumnPropNameInRow="priority" msprop:Generator_ColumnPropNameInTable="priorityColumn" msprop:Generator_UserColumnName="priority" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Plans" msprop:Generator_TableClassName="PlansDataTable" msprop:Generator_TableVarName="tablePlans" msprop:Generator_TablePropName="Plans" msprop:Generator_RowDeletingName="PlansRowDeleting" msprop:Generator_RowChangingName="PlansRowChanging" msprop:Generator_RowEvHandlerName="PlansRowChangeEventHandler" msprop:Generator_RowDeletedName="PlansRowDeleted" msprop:Generator_UserTableName="Plans" msprop:Generator_RowChangedName="PlansRowChanged" msprop:Generator_RowEvArgName="PlansRowChangeEvent" msprop:Generator_RowClassName="PlansRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="plan_record_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnplan_record_id" msprop:Generator_ColumnPropNameInRow="plan_record_id" msprop:Generator_ColumnPropNameInTable="plan_record_idColumn" msprop:Generator_UserColumnName="plan_record_id" type="xs:int" />
              <xs:element name="group_id" msprop:Generator_ColumnVarNameInTable="columngroup_id" msprop:Generator_ColumnPropNameInRow="group_id" msprop:Generator_ColumnPropNameInTable="group_idColumn" msprop:Generator_UserColumnName="group_id" type="xs:int" />
              <xs:element name="subject_id" msprop:Generator_ColumnVarNameInTable="columnsubject_id" msprop:Generator_ColumnPropNameInRow="subject_id" msprop:Generator_ColumnPropNameInTable="subject_idColumn" msprop:Generator_UserColumnName="subject_id" type="xs:int" />
              <xs:element name="subject_type_id" msprop:Generator_ColumnVarNameInTable="columnsubject_type_id" msprop:Generator_ColumnPropNameInRow="subject_type_id" msprop:Generator_ColumnPropNameInTable="subject_type_idColumn" msprop:Generator_UserColumnName="subject_type_id" type="xs:short" />
              <xs:element name="okr_count" msprop:Generator_ColumnVarNameInTable="columnokr_count" msprop:Generator_ColumnPropNameInRow="okr_count" msprop:Generator_ColumnPropNameInTable="okr_countColumn" msprop:Generator_UserColumnName="okr_count" type="xs:short" />
              <xs:element name="ikr_count" msprop:Generator_ColumnVarNameInTable="columnikr_count" msprop:Generator_ColumnPropNameInRow="ikr_count" msprop:Generator_ColumnPropNameInTable="ikr_countColumn" msprop:Generator_UserColumnName="ikr_count" type="xs:short" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Semesters" msprop:Generator_TableClassName="SemestersDataTable" msprop:Generator_TableVarName="tableSemesters" msprop:Generator_TablePropName="Semesters" msprop:Generator_RowDeletingName="SemestersRowDeleting" msprop:Generator_RowChangingName="SemestersRowChanging" msprop:Generator_RowEvHandlerName="SemestersRowChangeEventHandler" msprop:Generator_RowDeletedName="SemestersRowDeleted" msprop:Generator_UserTableName="Semesters" msprop:Generator_RowChangedName="SemestersRowChanged" msprop:Generator_RowEvArgName="SemestersRowChangeEvent" msprop:Generator_RowClassName="SemestersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="plan_record_id" msprop:Generator_ColumnVarNameInTable="columnplan_record_id" msprop:Generator_ColumnPropNameInRow="plan_record_id" msprop:Generator_ColumnPropNameInTable="plan_record_idColumn" msprop:Generator_UserColumnName="plan_record_id" type="xs:int" />
              <xs:element name="semester_number" msprop:Generator_ColumnVarNameInTable="columnsemester_number" msprop:Generator_ColumnPropNameInRow="semester_number" msprop:Generator_ColumnPropNameInTable="semester_numberColumn" msprop:Generator_UserColumnName="semester_number" type="xs:short" />
              <xs:element name="hours_count" msprop:Generator_ColumnVarNameInTable="columnhours_count" msprop:Generator_ColumnPropNameInRow="hours_count" msprop:Generator_ColumnPropNameInTable="hours_countColumn" msprop:Generator_UserColumnName="hours_count" type="xs:short" />
              <xs:element name="hours_per_week" msprop:Generator_ColumnVarNameInTable="columnhours_per_week" msprop:Generator_ColumnPropNameInRow="hours_per_week" msprop:Generator_ColumnPropNameInTable="hours_per_weekColumn" msprop:Generator_UserColumnName="hours_per_week" type="xs:short" />
              <xs:element name="lpz_hours_count" msprop:Generator_ColumnVarNameInTable="columnlpz_hours_count" msprop:Generator_ColumnPropNameInRow="lpz_hours_count" msprop:Generator_ColumnPropNameInTable="lpz_hours_countColumn" msprop:Generator_UserColumnName="lpz_hours_count" type="xs:short" />
              <xs:element name="kp_hours_count" msprop:Generator_ColumnVarNameInTable="columnkp_hours_count" msprop:Generator_ColumnPropNameInRow="kp_hours_count" msprop:Generator_ColumnPropNameInTable="kp_hours_countColumn" msprop:Generator_UserColumnName="kp_hours_count" type="xs:short" />
              <xs:element name="exam" msprop:Generator_ColumnVarNameInTable="columnexam" msprop:Generator_ColumnPropNameInRow="exam" msprop:Generator_ColumnPropNameInTable="examColumn" msprop:Generator_UserColumnName="exam" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SemestersLength" msprop:Generator_TableClassName="SemestersLengthDataTable" msprop:Generator_TableVarName="tableSemestersLength" msprop:Generator_TablePropName="SemestersLength" msprop:Generator_RowDeletingName="SemestersLengthRowDeleting" msprop:Generator_RowChangingName="SemestersLengthRowChanging" msprop:Generator_RowEvHandlerName="SemestersLengthRowChangeEventHandler" msprop:Generator_RowDeletedName="SemestersLengthRowDeleted" msprop:Generator_UserTableName="SemestersLength" msprop:Generator_RowChangedName="SemestersLengthRowChanged" msprop:Generator_RowEvArgName="SemestersLengthRowChangeEvent" msprop:Generator_RowClassName="SemestersLengthRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="group_id" msprop:Generator_ColumnVarNameInTable="columngroup_id" msprop:Generator_ColumnPropNameInRow="group_id" msprop:Generator_ColumnPropNameInTable="group_idColumn" msprop:Generator_UserColumnName="group_id" type="xs:int" />
              <xs:element name="semester_number" msprop:Generator_ColumnVarNameInTable="columnsemester_number" msprop:Generator_ColumnPropNameInRow="semester_number" msprop:Generator_ColumnPropNameInTable="semester_numberColumn" msprop:Generator_UserColumnName="semester_number" type="xs:short" />
              <xs:element name="length" msprop:Generator_ColumnVarNameInTable="columnlength" msprop:Generator_ColumnPropNameInRow="length" msprop:Generator_ColumnPropNameInTable="lengthColumn" msprop:Generator_UserColumnName="length" type="xs:double" />
              <xs:element name="semester_length_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnsemester_length_id" msprop:Generator_ColumnPropNameInRow="semester_length_id" msprop:Generator_ColumnPropNameInTable="semester_length_idColumn" msprop:Generator_UserColumnName="semester_length_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Skips" msprop:Generator_TableClassName="SkipsDataTable" msprop:Generator_TableVarName="tableSkips" msprop:Generator_TablePropName="Skips" msprop:Generator_RowDeletingName="SkipsRowDeleting" msprop:Generator_RowChangingName="SkipsRowChanging" msprop:Generator_RowEvHandlerName="SkipsRowChangeEventHandler" msprop:Generator_RowDeletedName="SkipsRowDeleted" msprop:Generator_UserTableName="Skips" msprop:Generator_RowChangedName="SkipsRowChanged" msprop:Generator_RowEvArgName="SkipsRowChangeEvent" msprop:Generator_RowClassName="SkipsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="student_id" msprop:Generator_ColumnVarNameInTable="columnstudent_id" msprop:Generator_ColumnPropNameInRow="student_id" msprop:Generator_ColumnPropNameInTable="student_idColumn" msprop:Generator_UserColumnName="student_id" type="xs:int" />
              <xs:element name="semester_number" msprop:Generator_ColumnVarNameInTable="columnsemester_number" msprop:Generator_ColumnPropNameInRow="semester_number" msprop:Generator_ColumnPropNameInTable="semester_numberColumn" msprop:Generator_UserColumnName="semester_number" type="xs:short" />
              <xs:element name="skip_count" msprop:Generator_ColumnVarNameInTable="columnskip_count" msprop:Generator_ColumnPropNameInRow="skip_count" msprop:Generator_ColumnPropNameInTable="skip_countColumn" msprop:Generator_UserColumnName="skip_count" type="xs:short" minOccurs="0" />
              <xs:element name="disrespectfully_skip_count" msprop:Generator_ColumnVarNameInTable="columndisrespectfully_skip_count" msprop:Generator_ColumnPropNameInRow="disrespectfully_skip_count" msprop:Generator_ColumnPropNameInTable="disrespectfully_skip_countColumn" msprop:Generator_UserColumnName="disrespectfully_skip_count" type="xs:short" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Students" msprop:Generator_TableClassName="StudentsDataTable" msprop:Generator_TableVarName="tableStudents" msprop:Generator_TablePropName="Students" msprop:Generator_RowDeletingName="StudentsRowDeleting" msprop:Generator_RowChangingName="StudentsRowChanging" msprop:Generator_RowEvHandlerName="StudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsRowDeleted" msprop:Generator_UserTableName="Students" msprop:Generator_RowChangedName="StudentsRowChanged" msprop:Generator_RowEvArgName="StudentsRowChangeEvent" msprop:Generator_RowClassName="StudentsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="student_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnstudent_id" msprop:Generator_ColumnPropNameInRow="student_id" msprop:Generator_ColumnPropNameInTable="student_idColumn" msprop:Generator_UserColumnName="student_id" type="xs:int" />
              <xs:element name="first_name" msprop:Generator_ColumnVarNameInTable="columnfirst_name" msprop:Generator_ColumnPropNameInRow="first_name" msprop:Generator_ColumnPropNameInTable="first_nameColumn" msprop:Generator_UserColumnName="first_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="second_name" msprop:Generator_ColumnVarNameInTable="columnsecond_name" msprop:Generator_ColumnPropNameInRow="second_name" msprop:Generator_ColumnPropNameInTable="second_nameColumn" msprop:Generator_UserColumnName="second_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="middle_name" msprop:Generator_ColumnVarNameInTable="columnmiddle_name" msprop:Generator_ColumnPropNameInRow="middle_name" msprop:Generator_ColumnPropNameInTable="middle_nameColumn" msprop:Generator_UserColumnName="middle_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="group_id" msprop:Generator_ColumnVarNameInTable="columngroup_id" msprop:Generator_ColumnPropNameInRow="group_id" msprop:Generator_ColumnPropNameInTable="group_idColumn" msprop:Generator_UserColumnName="group_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Subjects" msprop:Generator_TableClassName="SubjectsDataTable" msprop:Generator_TableVarName="tableSubjects" msprop:Generator_TablePropName="Subjects" msprop:Generator_RowDeletingName="SubjectsRowDeleting" msprop:Generator_RowChangingName="SubjectsRowChanging" msprop:Generator_RowEvHandlerName="SubjectsRowChangeEventHandler" msprop:Generator_RowDeletedName="SubjectsRowDeleted" msprop:Generator_UserTableName="Subjects" msprop:Generator_RowChangedName="SubjectsRowChanged" msprop:Generator_RowEvArgName="SubjectsRowChangeEvent" msprop:Generator_RowClassName="SubjectsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="subject_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnsubject_id" msprop:Generator_ColumnPropNameInRow="subject_id" msprop:Generator_ColumnPropNameInTable="subject_idColumn" msprop:Generator_UserColumnName="subject_id" type="xs:int" />
              <xs:element name="subject_name" msprop:Generator_ColumnVarNameInTable="columnsubject_name" msprop:Generator_ColumnPropNameInRow="subject_name" msprop:Generator_ColumnPropNameInTable="subject_nameColumn" msprop:Generator_UserColumnName="subject_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="70" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Groups" />
      <xs:field xpath="mstns:group_id" />
    </xs:unique>
    <xs:unique name="SubjectTypes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SubjectTypes" />
      <xs:field xpath="mstns:subject_type_id" />
    </xs:unique>
    <xs:unique name="GroupTypes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GroupTypes" />
      <xs:field xpath="mstns:group_type_id" />
    </xs:unique>
    <xs:unique name="Marks_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Marks" />
      <xs:field xpath="mstns:student_id" />
      <xs:field xpath="mstns:plan_record_id" />
      <xs:field xpath="mstns:semester_number" />
      <xs:field xpath="mstns:mark" />
      <xs:field xpath="mstns:mark_type_id" />
    </xs:unique>
    <xs:unique name="MarkTypes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MarkTypes" />
      <xs:field xpath="mstns:mark_type_id" />
    </xs:unique>
    <xs:unique name="Plans_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Plans" />
      <xs:field xpath="mstns:plan_record_id" />
    </xs:unique>
    <xs:unique name="Semesters_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Semesters" />
      <xs:field xpath="mstns:plan_record_id" />
      <xs:field xpath="mstns:semester_number" />
    </xs:unique>
    <xs:unique name="SemestersLength_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SemestersLength" />
      <xs:field xpath="mstns:semester_length_id" />
    </xs:unique>
    <xs:unique name="Skips_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Skips" />
      <xs:field xpath="mstns:student_id" />
      <xs:field xpath="mstns:semester_number" />
    </xs:unique>
    <xs:unique name="Students_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Students" />
      <xs:field xpath="mstns:student_id" />
    </xs:unique>
    <xs:unique name="Subjects_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Subjects" />
      <xs:field xpath="mstns:subject_id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Groups_GroupTypes" msdata:parent="GroupTypes" msdata:child="Groups" msdata:parentkey="group_type_id" msdata:childkey="group_type_id" msprop:Generator_UserChildTable="Groups" msprop:Generator_ChildPropName="GetGroupsRows" msprop:Generator_UserRelationName="FK_Groups_GroupTypes" msprop:Generator_RelationVarName="relationFK_Groups_GroupTypes" msprop:Generator_UserParentTable="GroupTypes" msprop:Generator_ParentPropName="GroupTypesRow" />
      <msdata:Relationship name="FK_Marks_MarkTypes" msdata:parent="MarkTypes" msdata:child="Marks" msdata:parentkey="mark_type_id" msdata:childkey="mark_type_id" msprop:Generator_UserChildTable="Marks" msprop:Generator_ChildPropName="GetMarksRows" msprop:Generator_UserRelationName="FK_Marks_MarkTypes" msprop:Generator_RelationVarName="relationFK_Marks_MarkTypes" msprop:Generator_UserParentTable="MarkTypes" msprop:Generator_ParentPropName="MarkTypesRow" />
      <msdata:Relationship name="FK_Marks_Plans" msdata:parent="Plans" msdata:child="Marks" msdata:parentkey="plan_record_id" msdata:childkey="plan_record_id" msprop:Generator_UserChildTable="Marks" msprop:Generator_ChildPropName="GetMarksRows" msprop:Generator_UserRelationName="FK_Marks_Plans" msprop:Generator_RelationVarName="relationFK_Marks_Plans" msprop:Generator_UserParentTable="Plans" msprop:Generator_ParentPropName="PlansRow" />
      <msdata:Relationship name="FK_Marks_Semesters" msdata:parent="Semesters" msdata:child="Marks" msdata:parentkey="plan_record_id semester_number" msdata:childkey="plan_record_id semester_number" msprop:Generator_UserChildTable="Marks" msprop:Generator_ChildPropName="GetMarksRows" msprop:Generator_UserRelationName="FK_Marks_Semesters" msprop:Generator_RelationVarName="relationFK_Marks_Semesters" msprop:Generator_UserParentTable="Semesters" msprop:Generator_ParentPropName="SemestersRowParent" />
      <msdata:Relationship name="FK_Marks_Students" msdata:parent="Students" msdata:child="Marks" msdata:parentkey="student_id" msdata:childkey="student_id" msprop:Generator_UserChildTable="Marks" msprop:Generator_ChildPropName="GetMarksRows" msprop:Generator_UserRelationName="FK_Marks_Students" msprop:Generator_RelationVarName="relationFK_Marks_Students" msprop:Generator_UserParentTable="Students" msprop:Generator_ParentPropName="StudentsRow" />
      <msdata:Relationship name="FK_Plans_Groups" msdata:parent="Groups" msdata:child="Plans" msdata:parentkey="group_id" msdata:childkey="group_id" msprop:Generator_UserChildTable="Plans" msprop:Generator_ChildPropName="GetPlansRows" msprop:Generator_UserRelationName="FK_Plans_Groups" msprop:Generator_ParentPropName="GroupsRow" msprop:Generator_RelationVarName="relationFK_Plans_Groups" msprop:Generator_UserParentTable="Groups" />
      <msdata:Relationship name="FK_Plans_Subjects" msdata:parent="Subjects" msdata:child="Plans" msdata:parentkey="subject_id" msdata:childkey="subject_id" msprop:Generator_UserChildTable="Plans" msprop:Generator_ChildPropName="GetPlansRows" msprop:Generator_UserRelationName="FK_Plans_Subjects" msprop:Generator_RelationVarName="relationFK_Plans_Subjects" msprop:Generator_UserParentTable="Subjects" msprop:Generator_ParentPropName="SubjectsRow" />
      <msdata:Relationship name="FK_Plans_SubjectTypes" msdata:parent="SubjectTypes" msdata:child="Plans" msdata:parentkey="subject_type_id" msdata:childkey="subject_type_id" msprop:Generator_UserChildTable="Plans" msprop:Generator_ChildPropName="GetPlansRows" msprop:Generator_UserRelationName="FK_Plans_SubjectTypes" msprop:Generator_ParentPropName="SubjectTypesRow" msprop:Generator_RelationVarName="relationFK_Plans_SubjectTypes" msprop:Generator_UserParentTable="SubjectTypes" />
      <msdata:Relationship name="FK_Semesters_Plans" msdata:parent="Plans" msdata:child="Semesters" msdata:parentkey="plan_record_id" msdata:childkey="plan_record_id" msprop:Generator_UserChildTable="Semesters" msprop:Generator_ChildPropName="GetSemestersRows" msprop:Generator_UserRelationName="FK_Semesters_Plans" msprop:Generator_ParentPropName="PlansRow" msprop:Generator_RelationVarName="relationFK_Semesters_Plans" msprop:Generator_UserParentTable="Plans" />
      <msdata:Relationship name="FK_SemestersLength_Groups" msdata:parent="Groups" msdata:child="SemestersLength" msdata:parentkey="group_id" msdata:childkey="group_id" msprop:Generator_UserChildTable="SemestersLength" msprop:Generator_ChildPropName="GetSemestersLengthRows" msprop:Generator_UserRelationName="FK_SemestersLength_Groups" msprop:Generator_ParentPropName="GroupsRow" msprop:Generator_RelationVarName="relationFK_SemestersLength_Groups" msprop:Generator_UserParentTable="Groups" />
      <msdata:Relationship name="FK_Skips_Students" msdata:parent="Students" msdata:child="Skips" msdata:parentkey="student_id" msdata:childkey="student_id" msprop:Generator_UserChildTable="Skips" msprop:Generator_ChildPropName="GetSkipsRows" msprop:Generator_UserRelationName="FK_Skips_Students" msprop:Generator_RelationVarName="relationFK_Skips_Students" msprop:Generator_UserParentTable="Students" msprop:Generator_ParentPropName="StudentsRow" />
      <msdata:Relationship name="FK_Students_Groups" msdata:parent="Groups" msdata:child="Students" msdata:parentkey="group_id" msdata:childkey="group_id" msprop:Generator_UserChildTable="Students" msprop:Generator_ChildPropName="GetStudentsRows" msprop:Generator_UserRelationName="FK_Students_Groups" msprop:Generator_ParentPropName="GroupsRow" msprop:Generator_RelationVarName="relationFK_Students_Groups" msprop:Generator_UserParentTable="Groups" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>